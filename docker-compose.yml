

services:
  suppliers:
    depends_on:
      - suppliers_db
    build:
      context: ./suppliers
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    container_name: suppliers
    environment:
      - DATABASE_HOST=suppliers_db
    networks:
      - procure-mate

  suppliers_db:
    image: postgres:latest
    container_name: suppliers_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: supplier_db
      POSTGRES_PASSWORD: postgres
    command: postgres -c log_statement=all
    networks:
      - procure-mate

  orders:
    depends_on:
      - orders_db
    build:
      context: ./orders
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    container_name: orders
    environment:
      - DATABASE_HOST=orders_db
    networks:
      - procure-mate

  orders_db:
    image: postgres:latest
    container_name: orders_db
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=1234
    networks:
      - procure-mate


  accounting:
    depends_on:
      - accounting_db
    build:
      context: ./accounting
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    container_name: accounting
    environment:
      - DATABASE_HOST=accounting_db
    networks:
      - procure-mate

  accounting_db:
    image: postgres:latest
    container_name: accounting_db
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=accounting
    networks:
      - procure-mate

  warehouse:
    depends_on:
      - warehouse_db
    build:
      context: ./warehouse
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    container_name: warehouse
    environment:
      - DATABASE_HOST=warehouse_db
    networks:
      - procure-mate

  warehouse_db:
    image: postgres:latest
    container_name: warehouse_db
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=warehouse
    networks:
      - procure-mate

networks:
  procure-mate:
    driver: bridge


